import os
import subprocess
import numpy as np

# Define the different row values
row_values = [2000, 4000, 8000, 10000, 16000, 32000, 64000, 100000]
num_runs = 30
mpi_processes = 4
print(f"\nSTART.")

# Function to parse elapsed time from test.py output
def parse_elapsed_time(output):
    for line in output.splitlines():
        if "elapsed time" in line:
            return float(line.split(":")[1].strip())
    return None

# Run test.py with each row value, 30 times per row value
for rows in row_values:
    times = []
    os.environ["ROWS"] = str(rows)
    
    print(f"\nRunning test.py for rows={rows} with {num_runs} repetitions.")
    
    for _ in range(num_runs):
        # Run the srun command and capture the output
        command = ["srun", "-n ", mpi_processes, "python", "test_knn.py"]
        result = subprocess.run(command, capture_output=True, text=True)
        
        # Parse the elapsed time from the output
        elapsed_time = parse_elapsed_time(result.stdout)
        if elapsed_time is not None:
            times.append(elapsed_time)
        else:
            print("Warning: Elapsed time not found in output.")
    
    # Calculate the mean and standard deviation for this row value
    mean_time = np.mean(times)
    std_dev_time = np.std(times)
    
    # Print the results
    print(f"Results for rows={rows}:")
    print(f"  Mean Elapsed Time: {mean_time:.6f} seconds")
    print(f"  Standard Deviation: {std_dev_time:.6f} seconds")
